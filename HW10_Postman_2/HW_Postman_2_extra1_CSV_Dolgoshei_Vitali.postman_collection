{
	"info": {
		"_postman_id": "11de6cbb-ba45-456e-89a8-19949818c042",
		"name": "HW_Postman_2_extra1****CSV",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18196426"
	},
	"item": [
		{
			"name": "EP_1**** user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1****. Преобразовать задание 1 таким образом, чтобы вы отправляли параметры через CSV файл. У вас будет ровно 1 запрос в коллекции, который будет повторяться столько раз, сколько строк в CSV файле. Также должна быть написана функция в тестах, которая проверяет валидность входящих данных, и в зависимости от этого проверяет на статус 200 или НЕ 200.\r",
							"\r",
							"// Требования:\r",
							"// 1) Name: 3-40 символов включительно, запрещены префиксные и постфиксные пробелы. Поле обязательное\r",
							"// 2) Age: только целые цифры в диапазоне 18-120 включительно. Поле обязательное\r",
							"// 3) Salary: только целые цифры в диапазоне 1-1000000 включительно. Поле обязательное\r",
							"\r",
							"const name = pm.iterationData.get(\"name\");\r",
							"const age = pm.iterationData.get(\"age\"); \r",
							"const salary = pm.iterationData.get(\"salary\"); \r",
							"\r",
							"const isCorrectName = () => {\r",
							"     if (typeof name === \"string\" && name !==\"\" && name.length == name.trim().length && name.length>=3 && name.length<=40) {return true}\r",
							"      else {return false}\r",
							"      // return (typeof name === \"string\" && name !==\"\" && name.length == name.trim().length && name.length>=3 && name.length<=40)\r",
							" }\r",
							"\r",
							"const isCorrectAge = () => {\r",
							"    if (age && !isNaN(age) && Number.isInteger(+age) && +age >=18 && +age <=120) {return true}\r",
							"     else {return false}\r",
							"}\r",
							"\r",
							"const isCorrectSalary = () => {\r",
							"    if (salary && !isNaN(salary) && Number.isInteger(+salary) && +salary >=1 && +salary <= 1000000) {return true}\r",
							"     else {return false}\r",
							"}\r",
							" \r",
							"// positive cases\r",
							"if (isCorrectName() && isCorrectAge() && isCorrectSalary()) {\r",
							"pm.test(`Status code is 200 for name = ${name}, age = ${age}, salary = ${salary}`, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// negative cases\r",
							" } else \r",
							"    { pm.test(`Status code is not 200, name = ${name}, age = ${age}, salary = ${salary} `, function () {\r",
							"        pm.response.to.not.have.status(200);\r",
							"       })\r",
							"    }"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}