Создать 
JSON 
https://github.com/Vitald75/JSON


 4. Создать внешний репозиторий c названием JSON.
    +
    https://github.com/Vitald75/JSON

 5. Клонировать репозиторий JSON на локальный компьютер.
    
    git clone https://github.com/Vitald75/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
    
    touch new.json

 7. Добавить файл под гит.

    git add new.json

 8. Закоммитить файл.

    git commit -m "add new.json"

 9. Отправить файл на внешний GitHub репозиторий.

    git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

    vim new.json
    ...
    Esc 
    :wq 

 11. Отправить изменения на внешний репозиторий.
    
    git add new.json   
    git commit -m "edit new.json"
    git push

 12. Создать файл preferences.json

    touch preferences.json
    
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

    vim preferences.json
    ...
    Esc 
    :wq 

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

    vim skills.json 
    ...
    Esc 
    :wq 

 15. Отправить сразу 2 файла на внешний репозиторий.

    git add .
    git commit -m "add 2 files: preferences.json, skills.json"
    git push	 

 16. На веб интерфейсе создать файл bug_report.json.
    +

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
    +

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
    +

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
    +

 20. Синхронизировать внешний и локальный репозиторий JSON
   git fetch  - check, if we have something to synchronise
   git pull


XML

 21. Создать внешний репозиторий c названием XML.

   https://github.com/Vitald75/XML

 22. Клонировать репозиторий XML на локальный компьютер.

   git clone https://github.com/Vitald75/XML.git 

 23. Внутри локального XML создать файл “new.xml”.

   cd xml
   touch new.xml  

 24. Добавить файл под гит.

   git add new.xml

 25. Закоммитить файл.

   git commit -m "add new.xml"

 26. Отправить файл на внешний GitHub репозиторий.

   git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 
   vim new.xml
    ...
    Esc 
    :wq 

 28. Отправить изменения на внешний репозиторий.

   git commit -ma "edit new.xml"

 29. Создать файл preferences.xml

   touch preferences.xml 

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

   vim preferences.xml
   ...
   Esc 
   :wq 

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML

   vim skills.xml 
   ...
   Esc 
   :wq 

 32. Сделать коммит в одну строку.

   git status
   git add . && git commit -m "add two files: preferences.xml and skills.xml"   

 33. Отправить сразу 2 файла на внешний репозиторий.

   git push 

 34. На веб интерфейсе создать файл bug_report.xml.

   +   

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

   +

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

   +

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

   +

 38. Синхронизировать внешний и локальный репозиторий XML 

   git fetch
   git pull

 
 1. Создать внешний репозиторий c названием TXT.
    
    https://github.com/Vitald75/TXT
    
 2. Клонировать репозиторий TXT на локальный компьютер.
  
    git clone https://github.com/Vitald75/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.

    cd txt
    touch new.txt

 4. Добавить файл под гит.
    
    git status
    git add new.txt

 5. Закоммитить файл.

    git commit -m "add new.txt"

 6. Отправить файл на внешний GitHub репозиторий.

    git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
    
    vim new.txt
    ...
    Esc 
    :wq 

 8. Отправить изменения на внешний репозиторий.
    
    git status
    git add new.txt
    git commit -m "edit new.txt" 
    git push

 9. Создать файл preferences.txt

    touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.

    vim preferences.txt
    ...
    Esc 
    :wq 

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT

    vim skills.txt 
    ...
    Esc 
    :wq 

 12. Сделать коммит в одну строку.

    git status
    git add . && git commit -m "add two files: preferences.txt and skills.txt"  

 13. Отправить сразу 2 файла на внешний репозиторий.

    git push

 14. На веб интерфейсе создать файл bug_report.txt.

    +

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

    +

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.

    +

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
    
    +

 18. Синхронизировать внешний и локальный репозиторий TXT

    git fetch
    git pull

